@import "math";
@import "settings";


@mixin triangle-top-left($angle, $size) {
    height: 0;
    width: 0;
    border-bottom-width: $size * tan($angle);
    border-bottom-color: transparent;
    border-right-width: $size;
}


@mixin beforeBorders($angle) {
    transform: rotate($angle + 45deg);    
    @if $angle >  0deg {
        border-left-color: transparent;
    }
    @if $angle >  90deg {
        border-bottom-color: transparent;
    }
    @if $angle > 180deg {
        border-right-color: transparent;
    }
    @if $angle > 270deg {
        border-top-color: transparent;
    }
}

@mixin cooldownByAngle($angle) {
    $angle90max: $angle % 90deg;
    &.p#{$angle} {
        .overlay-wrap {
            &:before {
                @include beforeBorders($angle);
            }
            &:after {
                @include triangle-top-left($angle90max, $border-size);
            }
        }
    }
}


@mixin cooldownWrap($color, $opacity) {
    box-sizing: border-box;
    overflow: hidden;
    $size: 100%;
    z-index: 1;
    $border-size: 100vmin;

    .overlay-wrap {
        z-index: 0;
        box-sizing: border-box;
        height: $size;
        width: $size;
        position: relative;
        transform-origin: center center;

        &:before, &:after {
            transform-origin: center center;
            box-sizing: border-box;
            content: ".";
            color: transparent;
            display: block;
            height: 0px;
            width: 0px;
            position: absolute;
            border-style: solid;
        }
        
        &:before, &:after {
            border-left-color: $color;
            border-right-color: $color;
            border-top-color: $color;
            border-bottom-color: $color;
        }
        
        &:after {
            border-width: $border-size;
            bottom: $size / 2;
            right: $size / 2;
            height: 0;
            width: 0;
            border-left: none;
            border-top: none;
        }
        
        &:before {
            left: $size / 2;
            top: $size / 2;
            margin-top: -  $border-size;
            margin-left: - $border-size;
            border-width: $border-size;
            border-left-color: red;
            transform: rotate(45deg);
        }
    }
    @for $angle from 0deg through 360deg {
        @include cooldownByAngle($angle);
    }
    &.animated {
        $anim-duration: 10s;
        .overlay-wrap {
            &:before {
                animation-name: overlay-wrap-before-animate;
                animation-duration: $anim-duration;
                animation-iteration-count: infinite; 
            }
            &:after {
                animation-name: overlay-wrap-after-animate;
                animation-duration: $anim-duration;
                animation-iteration-count: infinite; 
            }
        }
    }
}




@keyframes overlay-wrap-before-animate {
    @for $percentage from 1 through 100 {
        $angle: round($percentage * 3.6deg);
        $angle90max: round($percentage * 3.6deg % 90deg);
        #{$percentage * 1%} {
            @include beforeBorders($angle);
        } 
    }
}

@keyframes overlay-wrap-after-animate {
    @for $percentage from 1 through 100 {
        $angle: round($percentage * 3.6deg);
        $angle90max: round($percentage * 3.6deg % 90deg);
        #{$percentage * 1%} {
            @include triangle-top-left($angle90max, $border-size);
        } 
    }
}

